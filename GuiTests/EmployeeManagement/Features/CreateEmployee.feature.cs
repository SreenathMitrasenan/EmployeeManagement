// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EmployeeManagement.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("CreateEmployee")]
    public partial class CreateEmployeeFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
#line 1 "CreateEmployee.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "CreateEmployee", "As a user I want to create employee using basic details", ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("01_Create employee in employee manager appliation and verify its created and dele" +
            "te the same")]
        [NUnit.Framework.CategoryAttribute("smoketest")]
        public void _01_CreateEmployeeInEmployeeManagerAppliationAndVerifyItsCreatedAndDeleteTheSame()
        {
            string[] tagsOfScenario = new string[] {
                    "smoketest"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01_Create employee in employee manager appliation and verify its created and dele" +
                    "te the same", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 5
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 6
 testRunner.Given("I lauch application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 7
 testRunner.Then("I click on newEmployee webelement present in Home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                            "key",
                            "value"});
                table1.AddRow(new string[] {
                            "name",
                            "Roger"});
                table1.AddRow(new string[] {
                            "email",
                            "roger1885@gmail.com"});
                table1.AddRow(new string[] {
                            "proofSubmitted",
                            "PAN"});
                table1.AddRow(new string[] {
                            "salary",
                            "175000"});
#line 8
 testRunner.Then("I set below values in CreateEmployee page", ((string)(null)), table1, "Then ");
#line hidden
#line 14
 testRunner.Then("I click on save webelement present in CreateEmployee page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 15
 testRunner.Then("I verify and accept alert message with text Data Inserted Successfully! on Create" +
                        "Employee page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 16
 testRunner.Then("I click on allUsers webelement present in CreateEmployee page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 17
 testRunner.Then("I delete the employee having NAME property as Roger on Home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 18
 testRunner.Then("I verify and accept alert message with text Do you really want to delete this rec" +
                        "ord? on Home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 19
 testRunner.Then("I verify and accept alert message with text Data Deleted Successfully! on Home pa" +
                        "ge", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("02_Create employee in employee manager appliation and verify its created and dele" +
            "te the same")]
        [NUnit.Framework.CategoryAttribute("smoketest")]
        public void _02_CreateEmployeeInEmployeeManagerAppliationAndVerifyItsCreatedAndDeleteTheSame()
        {
            string[] tagsOfScenario = new string[] {
                    "smoketest"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02_Create employee in employee manager appliation and verify its created and dele" +
                    "te the same", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 22
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 23
 testRunner.Given("I lauch application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 24
 testRunner.Then("I click on newEmployee webelement present in Home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                            "key",
                            "value"});
                table2.AddRow(new string[] {
                            "name",
                            "Tom"});
                table2.AddRow(new string[] {
                            "email",
                            "tomcruise@gmail.com"});
                table2.AddRow(new string[] {
                            "male",
                            "true"});
                table2.AddRow(new string[] {
                            "active",
                            "true"});
                table2.AddRow(new string[] {
                            "department",
                            "Foxtrot"});
                table2.AddRow(new string[] {
                            "proofSubmitted",
                            "PAN"});
                table2.AddRow(new string[] {
                            "salary",
                            "175000"});
#line 25
 testRunner.Then("I set below values in CreateEmployee page", ((string)(null)), table2, "Then ");
#line hidden
#line 34
 testRunner.Then("I click on save webelement present in CreateEmployee page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 35
 testRunner.Then("I verify and accept alert message with text Data Inserted Successfully! on Create" +
                        "Employee page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 36
 testRunner.Then("I click on allUsers webelement present in CreateEmployee page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 37
 testRunner.Then("I delete the employee having NAME property as Tom on Home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 38
 testRunner.Then("I verify and accept alert message with text Do you really want to delete this rec" +
                        "ord? on Home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 39
 testRunner.Then("I verify and accept alert message with text Data Deleted Successfully! on Home pa" +
                        "ge", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("03_Create employee in employee manager for running test pipeline")]
        [NUnit.Framework.CategoryAttribute("basic")]
        public void _03_CreateEmployeeInEmployeeManagerForRunningTestPipeline()
        {
            string[] tagsOfScenario = new string[] {
                    "basic"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03_Create employee in employee manager for running test pipeline", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 42
 this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 43
 testRunner.Given("I lauch application", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 44
 testRunner.Then("I click on newEmployee webelement present in Home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
                TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                            "key",
                            "value"});
                table3.AddRow(new string[] {
                            "name",
                            "rom"});
                table3.AddRow(new string[] {
                            "email",
                            "romcruise@gmail.com"});
                table3.AddRow(new string[] {
                            "male",
                            "true"});
                table3.AddRow(new string[] {
                            "active",
                            "true"});
                table3.AddRow(new string[] {
                            "department",
                            "Foxtrot"});
                table3.AddRow(new string[] {
                            "proofSubmitted",
                            "PAN"});
                table3.AddRow(new string[] {
                            "salary",
                            "175000"});
#line 45
 testRunner.Then("I set below values in CreateEmployee page", ((string)(null)), table3, "Then ");
#line hidden
#line 54
 testRunner.Then("I click on save webelement present in CreateEmployee page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 55
 testRunner.Then("I verify and accept alert message with text Data Inserted Successfully! on Create" +
                        "Employee page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 56
 testRunner.Then("I click on allUsers webelement present in CreateEmployee page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
